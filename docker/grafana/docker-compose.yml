services:
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - /docker/appdata/prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - grafana

  grafana:
    image: grafana/grafana:11.2.2
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=mafyuh
      - GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD
    user: "1000"
    volumes:
      - /docker/appdata/grafana:/var/lib/grafana
    networks:
      - grafana

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    volumes:
      - /docker/appdata/loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - grafana

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /docker/appdata/promtail:/etc/promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - grafana

  snmp-exporter:
    image: prom/snmp-exporter:v0.26.0
    volumes:
      - /docker/appdata/snmp:/etc/snmp_exporter
    command: --config.file=/etc/snmp-exporter/snmp.yml
    networks:
      - grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.8.2
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - grafana
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
    networks:
      - grafana

  sonarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0
    container_name: sonarr-exporter
    command: ["sonarr"]
    environment:
      PORT: 9707
      URL: $SONARR_URL 
      APIKEY: $SONARR_API
    ports:
      - "9707:9707"
    restart: unless-stopped
  radarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0
    container_name: radarr-exporter
    command: ["radarr"]
    environment:
      PORT: 9708
      URL: $RADARR_URL 
      APIKEY: $RADARR_API
    ports:
      - "9708:9708"
    restart: unless-stopped
  prowlarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0
    container_name: prowlarr-exporter
    command: ["prowlarr"]
    environment:
      PORT: 9710
      URL: $PROWLARR_URL
      APIKEY: $PROWLARR_API
      PROWLARR__BACKFILL: true 
    ports:
     - "9710:9710"
    restart: unless-stopped
  sabnzbd-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0
    container_name: sabnzbd-exporter
    command: ["sabnzbd"]
    environment:
      PORT: 9711
      URL: $SAB_URL 
      APIKEY: $SAB_API
    ports:
     - "9711:9711"
    restart: unless-stopped
  bazarr-exporter:
    image: ghcr.io/onedr0p/exportarr:v2.0
    container_name: bazarr-exporter
    command: ["bazarr"]
    environment:
      PORT: 9712
      URL: $BAZARR_URL
      APIKEY: $BAZARR_API
    ports:
      - "9712:9712"
    restart: unless-stopped

networks:
  grafana:

volumes:
  prom_data: