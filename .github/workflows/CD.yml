name: Docker CD
on:
  push:
    branches:
      - main
    paths:
      - 'docker/**'
  workflow_dispatch:
    inputs:
      target_host:
        description: "Target host (ex. ubu.lan, plex.lan, all)"
        required: true
        type: string
      folder:
        description: "Folder to deploy (ex. jellyfin, plex, all)"
        required: true
        type: string

jobs:
  deploy:
    runs-on: self-hosted
    container:
      image: mafyuh/ansible-bws:1.1.5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git safe directory
        run: git config --global --add safe.directory /__w/iac/iac
      
      - name: Fetch all history for git diff
        run: git fetch --depth=2

      - name: Detect modified folders
        id: detect-changes
        run: |
          if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
            git fetch --unshallow
          fi
          folders=$(git diff --name-only HEAD~1 HEAD | grep '^docker/' | cut -d/ -f2 | sort | uniq)
          echo "Modified folders: $folders"
          echo "::set-output name=folders::$folders"
          
      - name: Map Folder to Host
        shell: bash
        run: |
          IFS=' ' read -r -a folder_array <<< "${{ steps.detect-changes.outputs.folders }}"
          hosts=""
          folders=""

          for folder in "${folder_array[@]}"; do
            case $folder in
              arm)
                host="ARM"
                ;;
              AI)
                host="Main-PC"
                ;;
              ag-main)
                host="adguard"
                ;;
              exporters)
                host="all"
                ;;
              grafana)
                host="Ubu"
                ;;
              jellyfin)
                host="Ark-Ripper"
                ;;
              kasm)
                host="Kasm"
                ;;
              netbox)
                host="netbox"
                ;;
              npm)
                host="Nginx-Proxy-Manager"
                ;;
              paperless)
                host="Ubu"
                ;;
              umami)
                host="umami"
                ;;
              wazuh)
                host="wazuh"
                ;;
              *)
                echo "Unknown folder: $folder"
                exit 1
                ;;
            esac

            if [ -z "$hosts" ]; then
              hosts="$host"
              folders="$folder"
            else
              hosts="$hosts,$host"
              folders="$folders,$folder"
            fi
          done

          echo "Deploying to hosts: $hosts for folders: $folders"

          echo "target_host=$hosts" >> $GITHUB_ENV
          echo "folder=$folders" >> $GITHUB_ENV

      - name: Override Target Host and Folder (Manual Run)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "target_host=${{ github.event.inputs.target_host }}" >> $GITHUB_ENV
          echo "folder=${{ github.event.inputs.folder }}" >> $GITHUB_ENV
        

      - name: Get Secrets from Bitwarden
        id: bitwarden-secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          base_url: https://vault.bitwarden.com
          secrets: |
            26b06759-9791-42d7-a076-b23e0063c4dd > ssh_private_key

      - name: Create Private key
        run: |
          mkdir -p /root/.ssh
          cat <<EOF > /root/.ssh/id_rsa
          ${{ steps.bitwarden-secrets.outputs.ssh_private_key }}
          EOF
      
      - name: Set permissions for private key
        run: |
          chmod 600 /root/.ssh/id_rsa

      - name: Set up SSH agent
        run: |
          eval $(ssh-agent -s)
          ssh-add /root/.ssh/id_rsa


      - name: Run Ansible Playbook
        env:
          BWS_ACCESS_TOKEN: ${{ secrets.BWS_ACCESS_TOKEN }}
          ANSIBLE_CONFIG: ansible/ansible.cfg
        run: |
          set -e
          ansible-playbook \
            -i inventories/netbox/netbox.inventory.yml \
            -i inventories/oracle/inventory.oci.yml \
            -i inventories/proxmox/inventory.proxmox.yml \
            ./ansible/playbooks/deploy-docker.yml \
            --extra-vars "target_host=${target_host} folder=${folder}" \
            | tee ansible_output.txt
          
          if grep -q 'unreachable=1\|failed=[1-9]' ansible_output.txt; then
            echo "Ansible reported failures or unreachable hosts."
            exit 1
          fi
  
